#!/bin/bash

# Pre-commit hook for Logan's 3D
# This hook runs before each commit to ensure code quality

set -e

echo "üîç Running pre-commit checks..."

# Check if we're in the right directory
if [ ! -f "go.mod" ]; then
    echo "‚ùå Error: Must be run from project root"
    exit 1
fi

# 1. Format Go code
echo "üìù Formatting Go code..."
if command -v gofmt &> /dev/null; then
    UNFORMATTED=$(gofmt -l .)
    if [ -n "$UNFORMATTED" ]; then
        echo "‚ùå The following files are not formatted:"
        echo "$UNFORMATTED"
        echo "Run 'gofmt -w .' to fix"
        exit 1
    fi
    echo "‚úÖ Go code is formatted"
else
    echo "‚ö†Ô∏è  gofmt not found, skipping format check"
fi

# 2. Format templ files
echo "üìù Formatting templ files..."
if command -v templ &> /dev/null; then
    templ fmt . > /dev/null 2>&1 || true
    echo "‚úÖ Templ files formatted"
else
    echo "‚ö†Ô∏è  templ not found, skipping templ format"
fi

# 3. Run tests
echo "üß™ Running tests..."
if make test > /dev/null 2>&1; then
    echo "‚úÖ All tests passed"
else
    echo "‚ùå Tests failed"
    exit 1
fi

# 4. Run linters
echo "üîé Running linters..."
if command -v golangci-lint &> /dev/null; then
    if golangci-lint run --timeout=3m; then
        echo "‚úÖ Linters passed"
    else
        echo "‚ùå Linters failed"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  golangci-lint not found, skipping linter checks"
    echo "    Install with: brew install golangci-lint"
fi

# 5. Tidy go.mod
echo "üßπ Tidying go.mod..."
go mod tidy
echo "‚úÖ go.mod is tidy"

echo ""
echo "‚ú® All pre-commit checks passed!"
echo ""
