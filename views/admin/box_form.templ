package admin

import (
	"fmt"
	"github.com/labstack/echo/v4"
	"github.com/loganlanou/logans3d-v4/storage/db"
	"github.com/loganlanou/logans3d-v4/views/layout"
)

templ BoxForm(c echo.Context, box *db.BoxCatalog) {
	@layout.AdminBase(c, "Box Form") {
		<div class="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
			<!-- Header -->
			<div class="bg-slate-800/50 backdrop-blur-sm border-b border-slate-700 sticky top-0 z-50">
				<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
					<div class="flex justify-between items-center py-4">
						<h1 class="text-2xl font-bold text-white">
							if box != nil {
								Edit Box
							} else {
								Add New Box
							}
						</h1>
						<a href="/admin/shipping" class="text-slate-400 hover:text-white transition-colors duration-200">
							← Back to Box Catalog
						</a>
					</div>
				</div>
			</div>
			<!-- Form -->
			<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<div class="bg-slate-800/50 backdrop-blur-sm rounded-xl border border-slate-700 p-6">
					<form
						if box != nil {
							method="POST"
							action={ templ.SafeURL(fmt.Sprintf("/admin/shipping/boxes/%s", box.Sku)) }
						} else {
							method="POST"
							action="/admin/shipping/boxes"
						}
						class="space-y-6"
					>
						<!-- Basic Information -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Box Information</h3>
							<!-- SKU -->
							<div>
								<label for="sku" class="block text-sm font-medium text-white mb-1" style="color: #ffffff !important; font-weight: 600 !important; text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7) !important;">
									SKU <span class="text-red-400">*</span>
								</label>
								<input
									type="text"
									id="sku"
									name="sku"
									required
									if box != nil {
										value={ box.Sku }
										readonly
									}
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
									placeholder="e.g., CXBSS21"
								/>
								if box != nil {
									<p class="mt-1 text-xs text-slate-400">SKU cannot be changed after creation</p>
								}
							</div>
							<!-- Name -->
							<div>
								<label for="name" class="block text-sm font-medium text-white mb-1" style="color: #ffffff !important; font-weight: 600 !important; text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7) !important;">
									Name <span class="text-red-400">*</span>
								</label>
								<input
									type="text"
									id="name"
									name="name"
									required
									if box != nil {
										value={ box.Name }
									}
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
									placeholder="e.g., 9x7x5"
								/>
							</div>
						</div>
						<!-- Dimensions -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Dimensions</h3>
							<div class="grid grid-cols-3 gap-4">
								<!-- Length -->
								<div>
									<label for="length_inches" class="block text-sm font-medium text-white mb-1">
										Length (in) <span class="text-red-400">*</span>
									</label>
									<input
										type="number"
										step="0.1"
										id="length_inches"
										name="length_inches"
										required
										if box != nil {
											value={ fmt.Sprintf("%.1f", box.LengthInches) }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="9.0"
									/>
								</div>
								<!-- Width -->
								<div>
									<label for="width_inches" class="block text-sm font-medium text-white mb-1">
										Width (in) <span class="text-red-400">*</span>
									</label>
									<input
										type="number"
										step="0.1"
										id="width_inches"
										name="width_inches"
										required
										if box != nil {
											value={ fmt.Sprintf("%.1f", box.WidthInches) }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="7.0"
									/>
								</div>
								<!-- Height -->
								<div>
									<label for="height_inches" class="block text-sm font-medium text-white mb-1">
										Height (in) <span class="text-red-400">*</span>
									</label>
									<input
										type="number"
										step="0.1"
										id="height_inches"
										name="height_inches"
										required
										if box != nil {
											value={ fmt.Sprintf("%.1f", box.HeightInches) }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="5.0"
									/>
								</div>
							</div>
							if box != nil {
								<div class="bg-slate-900/30 border border-slate-700 rounded-lg p-3">
									<p class="text-sm text-slate-300">
										Volume: <span class="font-mono text-emerald-400">{ fmt.Sprintf("%.0f in³", box.LengthInches * box.WidthInches * box.HeightInches) }</span>
									</p>
								</div>
							}
						</div>
						<!-- Weight and Cost -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Weight & Cost</h3>
							<div class="grid grid-cols-2 gap-4">
								<!-- Weight -->
								<div>
									<label for="box_weight_oz" class="block text-sm font-medium text-white mb-1">
										Box Weight (oz) <span class="text-red-400">*</span>
									</label>
									<input
										type="number"
										step="0.1"
										id="box_weight_oz"
										name="box_weight_oz"
										required
										if box != nil {
											value={ fmt.Sprintf("%.1f", box.BoxWeightOz) }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="4.0"
									/>
									<p class="mt-1 text-xs text-slate-400">Empty box weight</p>
								</div>
								<!-- Cost -->
								<div>
									<label for="unit_cost_usd" class="block text-sm font-medium text-white mb-1">
										Unit Cost (USD) <span class="text-red-400">*</span>
									</label>
									<input
										type="number"
										step="0.01"
										id="unit_cost_usd"
										name="unit_cost_usd"
										required
										if box != nil {
											value={ fmt.Sprintf("%.2f", box.UnitCostUsd) }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="0.51"
									/>
									<p class="mt-1 text-xs text-slate-400">Cost per box</p>
								</div>
							</div>
						</div>
						<!-- Status -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Status</h3>
							<div class="flex items-center">
								<input
									type="checkbox"
									id="is_active"
									name="is_active"
									if box == nil || (box.IsActive.Valid && box.IsActive.Bool) {
										checked
									}
									class="w-4 h-4 text-emerald-600 bg-slate-900/50 border-slate-600 rounded focus:ring-emerald-500 focus:ring-2"
								/>
								<label for="is_active" class="ml-2 text-sm font-medium text-white">
									Active (available for use)
								</label>
							</div>
						</div>
						<!-- Form Actions -->
						<div class="flex justify-end space-x-4 pt-6 border-t border-slate-700">
							<a
								href="/admin/shipping"
								class="px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white font-semibold rounded-lg transition-colors duration-200"
							>
								Cancel
							</a>
							<button
								type="submit"
								class="px-6 py-2 bg-emerald-600 hover:bg-emerald-700 text-white font-semibold rounded-lg transition-colors duration-200"
							>
								if box != nil {
									Update Box
								} else {
									Create Box
								}
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	}
}
