package admin

import (
	"github.com/labstack/echo/v4"
	"github.com/loganlanou/logans3d-v4/views/layout"
)

templ EmailPreview(c echo.Context, customerHTML string, adminHTML string, contactHTML string) {
	@layout.AdminBase(c, "Email Preview") {
		@layout.AdminContainer() {
			<!-- Header -->
			<div class="flex justify-between items-center mb-8">
				<h1 class="admin-text-primary admin-text-2xl admin-font-bold">Email Preview</h1>
			</div>

			<div class="admin-card">
				<div class="admin-card-header">
					<h2 class="admin-card-title">Email Templates</h2>
				</div>

				<div class="p-6">
					<p class="text-gray-600 mb-6">
						Preview the email templates that are sent to customers and internal staff.
						These emails use sample data for demonstration.
					</p>

					<!-- Email Type Selector and Test Button -->
					<div class="space-y-4 mb-6">
						<div class="flex justify-between items-center">
							<div class="flex flex-wrap gap-2">
								<button
									onclick="showEmail('customer')"
									id="btn-customer"
									class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition"
								>
									Customer Order Email
								</button>
								<button
									onclick="showEmail('admin')"
									id="btn-admin"
									class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition"
								>
									Admin Order Email
								</button>
								<button
									onclick="showEmail('contact')"
									id="btn-contact"
									class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition"
								>
									Contact Request Email
								</button>
							</div>
							<button
								onclick="showTestEmailDialog()"
								class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition flex items-center space-x-2"
							>
								<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
								</svg>
								<span>Send Test Email</span>
							</button>
						</div>
					</div>

					<!-- Email Preview Frames -->
					<div class="border rounded-lg overflow-hidden">
						<div id="email-customer" class="email-preview">
							<div class="bg-gray-100 px-4 py-2 border-b">
								<div class="text-sm text-gray-600">
									<strong>To:</strong> customer@example.com<br/>
									<strong>From:</strong> prints@logans3dcreations.com<br/>
									<strong>Subject:</strong> Order Confirmation - Order #SAMPLE-12345
								</div>
							</div>
							<iframe
								srcdoc={ customerHTML }
								class="w-full"
								style="height: 800px; border: none;"
								title="Customer Email Preview"
							></iframe>
						</div>

						<div id="email-admin" class="email-preview hidden">
							<div class="bg-gray-100 px-4 py-2 border-b">
								<div class="text-sm text-gray-600">
									<strong>To:</strong> prints@logans3dcreations.com<br/>
									<strong>From:</strong> prints@logans3dcreations.com<br/>
									<strong>Subject:</strong> New Order Received - Order #SAMPLE-12345
								</div>
							</div>
							<iframe
								srcdoc={ adminHTML }
								class="w-full"
								style="height: 800px; border: none;"
								title="Admin Email Preview"
							></iframe>
						</div>

						<div id="email-contact" class="email-preview hidden">
							<div class="bg-gray-100 px-4 py-2 border-b">
								<div class="text-sm text-gray-600">
									<strong>To:</strong> prints@logans3dcreations.com<br/>
									<strong>From:</strong> prints@logans3dcreations.com<br/>
									<strong>Reply-To:</strong> customer@example.com<br/>
									<strong>Subject:</strong> New Contact Request - General Inquiry
								</div>
							</div>
							<iframe
								srcdoc={ contactHTML }
								class="w-full"
								style="height: 800px; border: none;"
								title="Contact Request Email Preview"
							></iframe>
						</div>
					</div>
				</div>
			</div>

			<!-- Test Email Modal -->
			<div id="testEmailModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
				<div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
					<div class="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4 rounded-t-lg">
						<h3 class="text-xl font-bold text-white">Send Test Email</h3>
					</div>
					<div class="p-6">
						<p class="text-sm text-gray-600 mb-4">Enter an email address to send a test email to:</p>

						<div class="space-y-4">
							<div>
								<label class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
								<input
									type="email"
									id="testEmailInput"
									class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
									placeholder="example@email.com"
									value="prints@logans3dcreations.com"
								/>
							</div>

							<div>
								<label class="block text-sm font-medium text-gray-700 mb-2">Email Type</label>
								<select
									id="testEmailType"
									class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
								>
									<option value="customer">Customer Order Confirmation</option>
									<option value="admin">Admin Order Notification</option>
									<option value="contact">Contact Request Notification</option>
								</select>
							</div>
						</div>

						<div id="testEmailStatus" class="mt-4 hidden">
							<div class="p-3 rounded-md"></div>
						</div>

						<div class="flex justify-end space-x-3 mt-6">
							<button
								onclick="closeTestEmailDialog()"
								class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition"
							>
								Cancel
							</button>
							<button
								onclick="sendTestEmail()"
								id="sendTestEmailBtn"
								class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition"
							>
								Send Test Email
							</button>
						</div>
					</div>
				</div>
			</div>
		}
	}

	<script>
		let currentEmailType = 'customer';

		function showEmail(type) {
			currentEmailType = type;
			// Hide all email previews
			document.querySelectorAll('.email-preview').forEach(el => {
				el.classList.add('hidden');
			});

			// Update button styles
			document.querySelectorAll('[id^="btn-"]').forEach(btn => {
				btn.classList.remove('bg-blue-600', 'text-white');
				btn.classList.add('bg-gray-200', 'text-gray-700');
			});

			// Show selected email preview
			const emailEl = document.getElementById(`email-${type}`);
			if (emailEl) {
				emailEl.classList.remove('hidden');
			}

			// Update button style for selected
			const btnEl = document.getElementById(`btn-${type}`);
			if (btnEl) {
				btnEl.classList.remove('bg-gray-200', 'text-gray-700');
				btnEl.classList.add('bg-blue-600', 'text-white');
			}
		}

		// Initialize - show customer email by default
		document.addEventListener('DOMContentLoaded', () => {
			showEmail('customer');
		});

		function showTestEmailDialog() {
			const modal = document.getElementById('testEmailModal');
			const typeSelect = document.getElementById('testEmailType');

			// Set the select to match currently viewed email type
			typeSelect.value = currentEmailType;

			modal.classList.remove('hidden');
		}

		function closeTestEmailDialog() {
			const modal = document.getElementById('testEmailModal');
			const statusDiv = document.getElementById('testEmailStatus');
			const emailInput = document.getElementById('testEmailInput');

			modal.classList.add('hidden');
			statusDiv.classList.add('hidden');
			emailInput.value = '';
		}

		async function sendTestEmail() {
			const emailInput = document.getElementById('testEmailInput');
			const typeSelect = document.getElementById('testEmailType');
			const statusDiv = document.getElementById('testEmailStatus');
			const sendBtn = document.getElementById('sendTestEmailBtn');

			const email = emailInput.value.trim();
			const type = typeSelect.value;

			if (!email) {
				showStatus('error', 'Please enter an email address');
				return;
			}

			// Basic email validation
			if (!email.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)) {
				showStatus('error', 'Please enter a valid email address');
				return;
			}

			// Disable button and show loading
			sendBtn.disabled = true;
			sendBtn.textContent = 'Sending...';

			try {
				const response = await fetch('/admin/email-preview/send-test', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({
						email: email,
						type: type
					})
				});

				const data = await response.json();

				if (response.ok) {
					showStatus('success', `Test email sent successfully to ${email}!`);
					setTimeout(() => {
						closeTestEmailDialog();
					}, 2000);
				} else {
					showStatus('error', data.error || 'Failed to send test email');
				}
			} catch (error) {
				showStatus('error', 'Network error: ' + error.message);
			} finally {
				sendBtn.disabled = false;
				sendBtn.textContent = 'Send Test Email';
			}
		}

		function showStatus(type, message) {
			const statusDiv = document.getElementById('testEmailStatus');
			const statusContent = statusDiv.querySelector('div');

			statusDiv.classList.remove('hidden');

			if (type === 'success') {
				statusContent.className = 'p-3 rounded-md bg-green-100 text-green-800 border border-green-200';
			} else {
				statusContent.className = 'p-3 rounded-md bg-red-100 text-red-800 border border-red-200';
			}

			statusContent.textContent = message;
		}

		// Close modal on ESC key
		document.addEventListener('keydown', (e) => {
			if (e.key === 'Escape') {
				closeTestEmailDialog();
			}
		});
	</script>
}
