package admin

import (
	"fmt"
	"github.com/loganlanou/logans3d-v4/storage/db"
	"github.com/loganlanou/logans3d-v4/views/layout"
)

templ ProductForm(product *db.Product, categories []db.Category) {
	@layout.AdminBase("Product Form") {
		<div class="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900">
			<!-- Header -->
			<div class="bg-slate-800/50 backdrop-blur-sm border-b border-slate-700 sticky top-0 z-50">
				<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
					<div class="flex justify-between items-center py-4">
						<h1 class="text-2xl font-bold text-white">
							if product != nil {
								Edit Product
							} else {
								Add New Product
							}
						</h1>
						<a href="/admin" class="text-slate-400 hover:text-white transition-colors duration-200">
							‚Üê Back to Dashboard
						</a>
					</div>
				</div>
			</div>

			<!-- Form -->
			<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<div class="bg-slate-800/50 backdrop-blur-sm rounded-xl border border-slate-700 p-6">
					<form 
						if product != nil {
							method="POST" 
							action={ templ.SafeURL(fmt.Sprintf("/admin/product/%s", product.ID)) }
						} else {
							method="POST" 
							action="/admin/product"
						}
						enctype="multipart/form-data"
						class="space-y-6"
					>
						<!-- Basic Information -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Basic Information</h3>
							
							<!-- Name -->
							<div>
								<label for="name" class="block text-sm font-medium text-white mb-1" style="color: #ffffff !important; font-weight: 600 !important; text-shadow: 0 1px 3px rgba(0, 0, 0, 0.7) !important;">
									Product Name <span class="text-red-400">*</span>
								</label>
								<input
									type="text"
									id="name"
									name="name"
									required
									if product != nil {
										value={ product.Name }
									}
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
									placeholder="Enter product name"
								/>
							</div>

							<!-- Description -->
							<div>
								<label for="description" class="block text-sm font-medium text-white mb-1">
									Description
								</label>
								<textarea
									id="description"
									name="description"
									rows="4"
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
									placeholder="Enter detailed product description"
								>{ productDescription(product) }</textarea>
							</div>

							<!-- Short Description -->
							<div>
								<label for="short_description" class="block text-sm font-medium text-white mb-1">
									Short Description
								</label>
								<input
									type="text"
									id="short_description"
									name="short_description"
									if product != nil && product.ShortDescription.Valid {
										value={ product.ShortDescription.String }
									}
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
									placeholder="Brief product description"
								/>
							</div>

							<!-- Category -->
							<div>
								<label for="category_id" class="block text-sm font-medium text-white mb-1">
									Category
								</label>
								<select
									id="category_id"
									name="category_id"
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
								>
									<option value="">No Category</option>
									for _, category := range categories {
										<option 
											value={ category.ID }
											if product != nil && product.CategoryID.Valid && product.CategoryID.String == category.ID {
												selected
											}
										>
											{ category.Name }
										</option>
									}
								</select>
							</div>
						</div>

						<!-- Pricing & Inventory -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Pricing & Inventory</h3>
							
							<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
								<!-- Price -->
								<div>
									<label for="price" class="block text-sm font-medium text-white mb-1">
										Price ($) <span class="text-red-400">*</span>
									</label>
									<input
										type="number"
										id="price"
										name="price"
										step="0.01"
										min="0"
										required
										if product != nil {
											value={ fmt.Sprintf("%.2f", float64(product.PriceCents)/100) }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="0.00"
									/>
								</div>

								<!-- SKU -->
								<div>
									<label for="sku" class="block text-sm font-medium text-white mb-1">
										SKU
									</label>
									<input
										type="text"
										id="sku"
										name="sku"
										if product != nil && product.Sku.Valid {
											value={ product.Sku.String }
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="SKU-001"
									/>
								</div>

								<!-- Stock Quantity -->
								<div>
									<label for="stock_quantity" class="block text-sm font-medium text-white mb-1">
										Stock Quantity
									</label>
									<input
										type="number"
										id="stock_quantity"
										name="stock_quantity"
										min="0"
										if product != nil && product.StockQuantity.Valid {
											value={ fmt.Sprintf("%d", product.StockQuantity.Int64) }
										} else {
											value="0"
										}
										class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200"
										placeholder="0"
									/>
								</div>
							</div>
						</div>

						<!-- Image Upload -->
						<div class="space-y-4">
							<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Product Image</h3>
							
							<div>
								<label for="image" class="block text-sm font-medium text-white mb-1">
									Upload Image
								</label>
								<input
									type="file"
									id="image"
									name="image"
									accept="image/*"
									class="w-full px-3 py-2 bg-slate-900/50 border border-slate-600 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-emerald-600 file:text-white hover:file:bg-emerald-700 transition-all duration-200"
								/>
								<p class="mt-1 text-xs text-slate-400">Accepted formats: JPG, PNG, WebP (Max: 5MB)</p>
							</div>
						</div>

						<!-- Status Options -->
						if product != nil {
							<div class="space-y-4">
								<h3 class="text-lg font-semibold text-white mb-4" style="color: #ffffff !important; font-weight: 700 !important; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8) !important;">Status</h3>
								
								<div class="flex space-x-6">
									<label class="flex items-center cursor-pointer">
										<input
											type="checkbox"
											name="is_active"
											if product.IsActive.Valid && product.IsActive.Bool {
												checked
											}
											class="w-4 h-4 text-emerald-600 bg-slate-900 border-slate-600 rounded focus:ring-emerald-500 focus:ring-2"
										/>
										<span class="ml-2 text-sm font-medium text-white">Active</span>
									</label>

									<label class="flex items-center cursor-pointer">
										<input
											type="checkbox"
											name="is_featured"
											if product.IsFeatured.Valid && product.IsFeatured.Bool {
												checked
											}
											class="w-4 h-4 text-emerald-600 bg-slate-900 border-slate-600 rounded focus:ring-emerald-500 focus:ring-2"
										/>
										<span class="ml-2 text-sm font-medium text-white">Featured</span>
									</label>
								</div>
							</div>
						}

						<!-- Form Actions -->
						<div class="flex justify-end space-x-4 pt-6 border-t border-slate-700">
							<a
								href="/admin"
								class="px-6 py-2 bg-slate-700 hover:bg-slate-600 text-white font-semibold rounded-lg transition-colors duration-200"
							>
								Cancel
							</a>
							<button
								type="submit"
								class="px-6 py-2 bg-emerald-600 hover:bg-emerald-700 text-white font-semibold rounded-lg transition-colors duration-200"
							>
								if product != nil {
									Update Product
								} else {
									Create Product
								}
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	}
}

func productDescription(product *db.Product) string {
	if product != nil && product.Description.Valid {
		return product.Description.String
	}
	return ""
}