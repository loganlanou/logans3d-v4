package shop

import (
	"fmt"
	"github.com/loganlanou/logans3d-v4/storage/db"
	"github.com/loganlanou/logans3d-v4/views/layout"
)

templ ProductDetail(product db.Product, images []db.ProductImage, category db.Category) {
	@layout.Base(layout.Meta{
		Title:       fmt.Sprintf("%s - Logan's 3D Creations", product.Name),
		Description: product.Description.String,
		Keywords:    fmt.Sprintf("3D printed, %s, collectible, custom printing", product.Name),
	}) {
		<div class="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 relative overflow-hidden">
			<!-- Animated Background Elements -->
			<div class="absolute inset-0 opacity-10">
				<div class="absolute top-1/4 left-1/4 w-72 h-72 bg-gradient-to-r from-blue-400 to-emerald-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse"></div>
				<div class="absolute top-3/4 right-1/4 w-72 h-72 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse animation-delay-2000"></div>
				<div class="absolute bottom-1/4 left-1/2 w-72 h-72 bg-gradient-to-r from-teal-400 to-emerald-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse animation-delay-4000"></div>
			</div>
			<div class="relative z-10">
				<!-- Breadcrumb -->
				<nav class="pt-32 pb-8 px-8 sm:px-12 lg:px-16" aria-label="Breadcrumb">
					<div class="max-w-7xl mx-auto">
						<ol class="inline-flex items-center space-x-1 md:space-x-3 text-sm">
							<li class="inline-flex items-center">
								<a href="/" class="text-slate-300 hover:text-blue-400 transition-colors duration-200">Home</a>
							</li>
							<li>
								<div class="flex items-center">
									<svg class="w-4 h-4 mx-1 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
									</svg>
									<a href="/shop" class="text-slate-300 hover:text-blue-400 transition-colors duration-200">Shop</a>
								</div>
							</li>
							<li>
								<div class="flex items-center">
									<svg class="w-4 h-4 mx-1 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
									</svg>
									<a href={ templ.URL(fmt.Sprintf("/shop/category/%s", category.Slug)) } class="text-slate-300 hover:text-blue-400 transition-colors duration-200">{ category.Name }</a>
								</div>
							</li>
							<li>
								<div class="flex items-center">
									<svg class="w-4 h-4 mx-1 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
									</svg>
									<span class="text-slate-400">{ product.Name }</span>
								</div>
							</li>
						</ol>
					</div>
				</nav>
				<div class="max-w-7xl mx-auto px-8 sm:px-12 lg:px-16 py-12">
					<div class="grid md:grid-cols-2 gap-16">
						<!-- Product Images -->
						<div class="space-y-4">
							if len(images) > 0 {
								<div class="aspect-square bg-gradient-to-br from-slate-800/50 to-slate-900/50 rounded-3xl border border-slate-700/50 backdrop-blur-sm shadow-2xl overflow-hidden group hover:border-emerald-500/30 transition-all duration-500">
									<img src={ fmt.Sprintf("/public/images/products/%s", images[0].ImageUrl) } alt={ product.Name } class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"/>
								</div>
								if len(images) > 1 {
									<div class="grid grid-cols-4 gap-3">
										for _, image := range images[1:] {
											<div class="aspect-square bg-gradient-to-br from-slate-800/50 to-slate-900/50 rounded-xl border border-slate-700/50 backdrop-blur-sm overflow-hidden cursor-pointer hover:border-emerald-500/50 hover:shadow-lg hover:shadow-emerald-500/10 transition-all duration-300 group">
												<img src={ fmt.Sprintf("/public/images/products/%s", image.ImageUrl) } alt={ product.Name } class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"/>
											</div>
										}
									</div>
								}
							} else {
								<div class="aspect-square bg-gradient-to-br from-slate-800/50 to-slate-900/50 rounded-3xl border border-slate-700/50 backdrop-blur-sm shadow-2xl flex items-center justify-center">
									<div class="text-center">
										<svg class="w-24 h-24 text-slate-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
										</svg>
										<p class="text-slate-400 font-medium">No Image Available</p>
									</div>
								</div>
							}
						</div>
						<!-- Product Info -->
						<div class="bg-gradient-to-br from-slate-800/50 to-slate-900/50 rounded-3xl border border-slate-700/50 backdrop-blur-sm shadow-2xl p-10">
							<h1 class="text-4xl font-bold text-white mb-6 bg-gradient-to-r from-blue-300 to-emerald-300 bg-clip-text text-transparent">{ product.Name }</h1>
							<!-- Price -->
							<div class="mb-8">
								<div class="text-5xl font-bold bg-gradient-to-r from-blue-400 to-emerald-400 bg-clip-text text-transparent">
									${ fmt.Sprintf("%.2f", float64(product.PriceCents)/100) }
								</div>
							</div>
							<!-- Stock Status -->
							<div class="mb-8">
								if product.StockQuantity.Valid && product.StockQuantity.Int64 > 0 {
									<span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-green-400/10 text-green-400 border border-green-400/20 backdrop-blur-sm">
										<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
											<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
										</svg>
										In Stock ({ fmt.Sprintf("%d", product.StockQuantity.Int64) } available)
									</span>
								} else {
									<span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-red-400/10 text-red-400 border border-red-400/20 backdrop-blur-sm">
										<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
											<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
										</svg>
										Out of Stock
									</span>
								}
							</div>
							<!-- Category -->
							<div class="mb-8">
								<span class="text-slate-400">Category: </span>
								<a
									href={ templ.URL(fmt.Sprintf("/shop/category/%s", category.Slug)) }
									class="text-blue-400 hover:text-emerald-400 font-semibold transition-colors duration-200 hover:underline"
								>
									{ category.Name }
								</a>
							</div>
							<!-- Description -->
							if product.Description.Valid {
								<div class="mb-10">
									<h3 class="text-xl font-bold text-white mb-4">Description</h3>
									<p class="text-slate-300 leading-relaxed text-lg">{ product.Description.String }</p>
								</div>
							}
							<!-- Add to Cart -->
							<div class="space-y-4">
								if product.StockQuantity.Valid && product.StockQuantity.Int64 > 0 {
									<button
										class="w-full bg-gradient-to-r from-blue-600 to-emerald-600 text-white py-5 px-8 rounded-2xl font-bold text-lg hover:from-blue-700 hover:to-emerald-700 transition-all duration-300 shadow-lg hover:shadow-xl hover:shadow-emerald-500/25 transform hover:-translate-y-1 add-to-cart-btn"
										data-product-id={ product.ID }
									>
										Add to Cart
									</button>
								} else {
									<button class="w-full bg-slate-700/50 text-slate-400 py-5 px-8 rounded-2xl font-bold text-lg cursor-not-allowed border border-slate-600/50 backdrop-blur-sm" disabled>
										Out of Stock
									</button>
								}
								<a href="/custom" class="block w-full bg-gradient-to-r from-slate-700/50 to-slate-800/50 text-slate-300 py-4 px-8 rounded-2xl font-semibold text-center hover:from-slate-600/50 hover:to-slate-700/50 hover:text-white transition-all duration-300 border border-slate-600/50 hover:border-slate-500/50 backdrop-blur-sm group">
									<span class="group-hover:scale-105 transition-transform duration-200">Need a Custom Version?</span>
								</a>
							</div>
							<!-- Product Details -->
							<div class="mt-10 border-t border-slate-700/50 pt-8">
								<h3 class="text-xl font-bold text-white mb-6">Product Details</h3>
								<dl class="space-y-4">
									if product.LeadTimeDays.Valid {
										<div class="flex justify-between items-center">
											<dt class="text-slate-400 font-medium">Lead Time:</dt>
											<dd class="text-white font-semibold">{ fmt.Sprintf("%d days", product.LeadTimeDays.Int64) }</dd>
										</div>
									}
									if product.Sku.Valid {
										<div class="flex justify-between items-center">
											<dt class="text-slate-400 font-medium">SKU:</dt>
											<dd class="text-white font-semibold font-mono bg-slate-700/30 px-3 py-1 rounded-lg border border-slate-600/50">{ product.Sku.String }</dd>
										</div>
									}
								</dl>
							</div>
						</div>
					</div>
				</div>
				<!-- Back to Shop -->
				<div class="max-w-7xl mx-auto px-8 sm:px-12 lg:px-16 py-12 text-center">
					<a href="/shop" class="inline-flex items-center text-blue-400 hover:text-emerald-400 font-semibold text-lg group transition-colors duration-200">
						<svg class="w-6 h-6 mr-3 group-hover:-translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
						</svg>
						<span class="group-hover:underline">Back to Shop</span>
					</a>
				</div>
			</div>
		</div>
	}
}
