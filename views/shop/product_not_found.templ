package shop

import (
	"fmt"
	"github.com/labstack/echo/v4"
	"github.com/loganlanou/logans3d-v4/storage/db"
	"github.com/loganlanou/logans3d-v4/views/layout"
)

templ ProductNotFound(c echo.Context, slug string, categories []db.Category, relatedProducts []ProductWithImage) {
	@layout.Base(c, layout.Meta{
		Title:       "Product Not Available - Logan's 3D Creations",
		Description: "This product is no longer available. Browse our other amazing 3D printed creations.",
		Keywords:    "3D printed, collectibles, custom printing",
	}) {
		<div class="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 relative overflow-hidden">
			<!-- Animated Background Elements -->
			<div class="absolute inset-0 opacity-10">
				<div class="absolute top-1/4 left-1/4 w-72 h-72 bg-gradient-to-r from-blue-400 to-emerald-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse"></div>
				<div class="absolute top-3/4 right-1/4 w-72 h-72 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse animation-delay-2000"></div>
				<div class="absolute bottom-1/4 left-1/2 w-72 h-72 bg-gradient-to-r from-teal-400 to-emerald-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse animation-delay-4000"></div>
			</div>
			<div class="relative z-10">
				<!-- Breadcrumb -->
				<nav class="pt-32 pb-8 px-8 sm:px-12 lg:px-16" aria-label="Breadcrumb">
					<div class="max-w-7xl mx-auto">
						<ol class="inline-flex items-center space-x-1 md:space-x-3 text-sm">
							<li class="inline-flex items-center">
								<a href="/" class="text-slate-300 hover:text-blue-400 transition-colors duration-200">Home</a>
							</li>
							<li>
								<div class="flex items-center">
									<svg class="w-4 h-4 mx-1 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
									</svg>
									<a href="/shop" class="text-slate-300 hover:text-blue-400 transition-colors duration-200">Shop</a>
								</div>
							</li>
							<li aria-current="page">
								<div class="flex items-center">
									<svg class="w-4 h-4 mx-1 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 111.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
									</svg>
									<span class="text-slate-400">Not Found</span>
								</div>
							</li>
						</ol>
					</div>
				</nav>
				<!-- Main Content -->
				<div class="px-8 sm:px-12 lg:px-16 pb-24">
					<div class="max-w-7xl mx-auto">
						<!-- 404 Message -->
						<div class="text-center mb-16">
							<div class="inline-flex items-center justify-center w-32 h-32 bg-gradient-to-br from-blue-500/20 to-emerald-500/20 rounded-full mb-8 backdrop-blur-sm border border-blue-500/30">
								<svg class="w-16 h-16 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
								</svg>
							</div>
							<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 bg-gradient-to-r from-blue-400 via-emerald-400 to-cyan-400 bg-clip-text text-transparent">
								Product Not Available
							</h1>
							<p class="text-xl text-slate-300 mb-8 max-w-2xl mx-auto">
								We're sorry, but this product is no longer available. It may have been discontinued or is temporarily out of stock.
							</p>
							<div class="flex flex-wrap justify-center gap-4">
								<a href="/shop" class="inline-flex items-center px-8 py-3 bg-gradient-to-r from-blue-500 to-emerald-500 text-white font-semibold rounded-lg hover:from-blue-600 hover:to-emerald-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105">
									<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
									</svg>
									Browse All Products
								</a>
								<a href="/" class="inline-flex items-center px-8 py-3 bg-slate-700/50 text-white font-semibold rounded-lg hover:bg-slate-700 transition-all duration-300 backdrop-blur-sm border border-slate-600">
									<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
									</svg>
									Return Home
								</a>
							</div>
						</div>
						<!-- Browse by Category -->
						if len(categories) > 0 {
							<div class="mb-16">
								<h2 class="text-3xl font-bold mb-8 text-center bg-gradient-to-r from-blue-400 to-emerald-400 bg-clip-text text-transparent">
									Browse by Category
								</h2>
								<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
									for _, category := range categories {
										<a
											href={ templ.URL("/shop/category/" + category.Slug) }
											class="group bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-lg p-6 hover:bg-slate-700/50 hover:border-blue-500/50 transition-all duration-300 text-center"
										>
											<h3 class="text-lg font-semibold text-white group-hover:text-blue-400 transition-colors duration-300">
												{ category.Name }
											</h3>
										</a>
									}
								</div>
							</div>
						}
						<!-- Related Products -->
						if len(relatedProducts) > 0 {
							<div>
								<h2 class="text-3xl font-bold mb-8 text-center bg-gradient-to-r from-blue-400 to-emerald-400 bg-clip-text text-transparent">
									You Might Also Like
								</h2>
								<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
									for _, productWithImage := range relatedProducts {
										<a
											href={ templ.URL("/shop/product/" + productWithImage.Product.Slug) }
											class="group bg-slate-800/50 backdrop-blur-sm border border-slate-700 rounded-lg overflow-hidden hover:border-blue-500/50 transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/20"
										>
											<div class="aspect-square overflow-hidden bg-slate-700">
												if productWithImage.ImageURL != "" {
													<img
														src={ productWithImage.ImageURL }
														alt={ productWithImage.Product.Name }
														class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
													/>
												} else {
													<div class="w-full h-full flex items-center justify-center text-slate-500">
														<svg class="w-16 h-16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
															<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
														</svg>
													</div>
												}
											</div>
											<div class="p-4">
												<h3 class="text-lg font-semibold text-white mb-2 group-hover:text-blue-400 transition-colors duration-300">
													{ productWithImage.Product.Name }
												</h3>
												<p class="text-2xl font-bold bg-gradient-to-r from-blue-400 to-emerald-400 bg-clip-text text-transparent">
													${ fmt.Sprintf("%.2f", float64(productWithImage.Product.PriceCents)/100) }
												</p>
											</div>
										</a>
									}
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	}
}
